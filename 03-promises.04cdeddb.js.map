{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAQA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAS,GAEpCC,YAAW,WACPH,EACFF,EAAS,CAACH,WAAUC,UAGpBG,EAAQ,CAACJ,WAASC,S,GAGjBA,E,IAjBcQ,SAASC,cAAc,SAG/BC,iBAAiB,UAkB5B,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAA4BC,EAAAF,EAAEG,OAAOC,SAA9BC,EAAqBH,EAArBb,MAAMiB,EAAeJ,EAAfI,KAAKC,EAAUL,EAAVK,OACdC,GAAaH,EAAMI,MACnBC,GAAeH,EAAOE,MACtBE,GAAaL,EAAKG,MAEbG,EAAW,EAAGA,GAAYF,EAAaE,GAAW,EAC7DzB,EAAcyB,EAASJ,GACpBK,MAAK,SAAAC,G,IAAE1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAErE8B,OAAM,SAAAL,G,IAAE1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAErEmB,GAAcG,EAEhBX,EAAEG,OAAOkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n//import \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst submitForm = document.querySelector(\".form\");\n\n\nsubmitForm.addEventListener(\"submit\", onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n  const shouldResolve = Math.random()>0.3;\n\n  setTimeout(()=> {\n  if (shouldResolve) {\n    resolve ({position, delay})\n    // Fulfill\n  } else {\n    reject ({position,delay});\n  }\n    // Reject\n  }, delay);\n})\n}\n\nfunction onSubmit(e){\n  e.preventDefault();\n  const {delay,step,amount} = e.target.elements;\n  let delayValue= +delay.value;\n  let amountValue = +amount.value;\n  let stepValue = +step.value;\n\n  for (let position = 1; position <= amountValue; position +=1) {\ncreatePromise(position,delayValue) \n  .then(({position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayValue += stepValue;\n}\ne.target.reset();\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","delay1","step","amount","delayValue","value","amountValue","stepValue","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.04cdeddb.js.map"}