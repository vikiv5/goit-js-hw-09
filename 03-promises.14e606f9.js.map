{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACPH,EACFF,EAAS,CAACH,WAAUC,UAGpBG,EAAQ,CAACJ,WAAUC,S,GAGlBA,E,IAnBcQ,SAASC,cAAc,SAK/BC,iBAAiB,UAkB5B,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAA6BC,EAAAF,EAAEG,OAAOC,SAA/BC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdb,MAAMkB,EAAQL,EAARK,KAKZC,GAJQF,EAAMG,MAIH,GAAGD,GAAYH,EAAOI,MAAOD,GAAW,EAC9DrB,EAAcqB,EAASF,GACpBI,MAAK,SAAAC,G,IAAEvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAErE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,KAEtDkB,EAAKE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst submitForm = document.querySelector(\".form\");\n//const delay = document.querySelector(\"name[delay]\");\n//const step = document.querySelector (\"name[step]\");\n//const amount = document.querySelector(\"name[amount]\");\n\nsubmitForm.addEventListener(\"submit\", onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(()=> {\n  if (shouldResolve) {\n    resolve ({position, delay})\n    // Fulfill\n  } else {\n    reject ({position, delay});\n  }\n    // Reject\n  }, delay);\n})\n}\n\nfunction onSubmit(e){\n  e.preventDefault();\n  const {amount, delay,step} = e.target.elements;\n  let delayValue= +delay.value;\n  //let amountValue = +amount.value;\n  //let stepValue = +step.value;\n\n  for (let position = 1; position <= amount.value; position +=1) {\ncreatePromise(position,delay) \n  .then(({position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayValue += +step.value;\n}}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","amount","delay1","step","position1","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.14e606f9.js.map"}