{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACPH,EACFF,EAAS,C,SAACH,E,MAAUC,IAGpBG,EAAQ,C,SAACJ,E,MAAUC,GAAO,GAGzBA,EAAM,G,CAnBQQ,SAASC,cAAc,SAK/BC,iBAAiB,UAkB5B,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,OAACA,EAAQb,MAAAc,EAAKC,KAACA,GAAQJ,EAAEK,OAAOC,SACtC,IAAIC,GAAaJ,EAAMK,MAIvB,IAAK,IAAIC,EAAW,EAAGA,GAAYP,EAAOM,MAAOC,GAAW,EAC9DtB,EAAcsB,EAASN,GACpBO,MAAK,EAACtB,SAACA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEvEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEvEkB,IAAeH,EAAKI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst submitForm = document.querySelector(\".form\");\n//const delay = document.querySelector(\"name[delay]\");\n//const step = document.querySelector (\"name[step]\");\n//const amount = document.querySelector(\"name[amount]\");\n\nsubmitForm.addEventListener(\"submit\", onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(()=> {\n  if (shouldResolve) {\n    resolve ({position, delay})\n    // Fulfill\n  } else {\n    reject ({position, delay});\n  }\n    // Reject\n  }, delay);\n})\n}\n\nfunction onSubmit(e){\n  e.preventDefault();\n  const {amount, delay,step} = e.target.elements;\n  let delayValue= +delay.value;\n  //let amountValue = +amount.value;\n  //let stepValue = +step.value;\n\n  for (let position = 1; position <= amount.value; position +=1) {\ncreatePromise(position,delay) \n  .then(({position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayValue += +step.value;\n}}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","amount","delay1","step","target","elements","delayValue","value","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f0adc44d.js.map"}